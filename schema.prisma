// This file is automatically generated by Keystone, do not modify it manually.
// Modify your Keystone config when you want to change this.

datasource mysql {
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
  provider          = "mysql"
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id            String       @id @default(uuid())
  name          String       @unique @default("")
  email         String       @unique @default("")
  password      String
  role          UserRoleType @default(user)
  status        String?      @default("active")
  isPrivileged  Boolean      @default(false)
  slopRating    Int?         @default(0) @map("my_integer")
  posts         Post[]       @relation("Post_author")
  createdAt     DateTime?    @default(now())
  lastLoginDate DateTime?    @default(now())
}

model Post {
  id       String    @id @default(uuid())
  title    String    @default("")
  content  Json      @default("[{\"type\":\"paragraph\",\"children\":[{\"text\":\"\"}]}]")
  author   User?     @relation("Post_author", fields: [authorId], references: [id])
  authorId String?   @map("author")
  status   String?
  keywords Keyword[] @relation("Keyword_posts")
  slops    Slop[]    @relation("Post_slops")

  @@index([authorId])
}

model Keyword {
  id    String @id @default(uuid())
  name  String @default("")
  posts Post[] @relation("Keyword_posts")
}

model Slop {
  id    String @id @default(uuid())
  name  String @default("")
  posts Post[] @relation("Post_slops")
}

model Movie {
  id          String @id @default(uuid())
  title       String @default("")
  sortTitle   String @default("")
  tomatoScore Int    @unique @default(0) @map("my_tomatoScore")
  runtime     Int?   @default(0) @map("my_runtime")
  releaseYear Int?   @default(0) @map("my_releaseYear")
  handicap    Int?   @default(0) @map("my_handicap")
  description String @default("")
  decade      Int?   @default(0) @map("my_decade")
  howToWatch  String @default("")
}

enum UserRoleType {
  admin
  user
}
